suite: Test argocd with default values
templates:
  - templates/plumbing/argocd.yaml
release:
  name: release-test
tests:
  - it: should contain argocd by default
    documentIndex: 0
    asserts:
      - isKind:
          of: ArgoCD

  - it: should render the default resourceHealthChecks correctly
    documentIndex: 0
    asserts:
      - isSubset:
          path: spec
          content:
            resourceHealthChecks:
            - kind: PersistentVolumeClaim
              check: |
                hs = {}
                if obj.status ~= nil then
                  if obj.status.phase ~= nil then
                    if obj.status.phase == "Pending" then
                      hs.status = "Healthy"
                      hs.message = obj.status.phase
                      return hs
                    elseif obj.status.phase == "Bound" then
                      hs.status = "Healthy"
                      hs.message = obj.status.phase
                      return hs
                    end
                  end
                end
                hs.status = "Progressing"
                hs.message = "Waiting for PVC"
                return hs

  - it: should render custom resourceHealthChecks correctly
    set:
      clusterGroup:
        argoCD:
          resourceHealthChecks:
            - kind: Foo
              group: Bar
              check: |
                return true
    documentIndex: 0
    asserts:
      - isSubset:
          path: spec
          content:
            resourceHealthChecks:
              - kind: Foo
                group: Bar
                check: |
                  return true

  - it: should render the default resourceExclusions correctly
    documentIndex: 0
    asserts:
      - isSubset:
          path: spec
          content:
            resourceExclusions: |
              - apiGroups:
                - tekton.dev
                kinds:
                - TaskRun
                - PipelineRun

  - it: should render the default resourceExclusions correctly when excludeESO is true
    documentIndex: 0
    set:
      global.excludeESO: true
    asserts:
      - isSubset:
          path: spec
          content:
            resourceExclusions: |
              - apiGroups:
                - tekton.dev
                kinds:
                - TaskRun
                - PipelineRun
              - apiGroups:
                - external-secrets.io
                kinds:
                - ExternalSecret

  - it: should render custom resourceExclusions correctly
    set:
      clusterGroup:
        argoCD:
          resourceExclusions: |
            - apiGroups:
              - foo.bar
              kinds:
              - Foo
              - Baz
    documentIndex: 0
    asserts:
      - isSubset:
          path: spec
          content:
            resourceExclusions: |
              - apiGroups:
                - foo.bar
                kinds:
                - Foo
                - Baz
